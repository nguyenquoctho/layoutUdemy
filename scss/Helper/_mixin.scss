@mixin styleText($fs,$fw,$color){
    font-size: $fs;
    font-weight: $fw;
    color: $color;
}

@mixin styleButton($bg-color, $border,$pd-top-botton,$pd-right-left) {
    background-color: $bg-color;
    border:1px solid $border;
    padding: $pd-top-botton $pd-right-left;
}

@mixin hoverButton($bg-color, $color, $border) {
    background-color: $bg-color;
    color: $color;
    border: 1px solid $border;
}

@mixin hoverLink() {
    @include styleText($fs-0 -1,$fw-normal,$color-blue);
    text-decoration: none;
    &:hover{
        color: $color-black-0;
    }
}

@mixin styleSearch($bg-color, $border, $bg-focus,$border-focus) {
    .input-group{
        background: $bg-color;
        border: 1px solid $border;
        
        .form-control{
            padding: $pd-2 $pd-2;
            background: transparent;
            border: 1px solid transparent;
            &:focus{
                outline: none;
                background: $bg-focus;
                border-top:1px solid $border-focus;
                border-bottom:1px solid $border-focus;
                border-left:1px solid $border-focus;
                box-shadow: none;
                & + .input-group-append{
                    .input-group-text{
                     background: $bg-focus;
                     border-top:1px solid $border-focus;
                     border-bottom:1px solid $border-focus;
                     border-left:1px solid $border-focus;
                     &:hover{
                         @include hoverButton($color-red-0, $color-white-0, $color-red-0);
                     }
                    }
                }
            }
        }
        .input-group-text{
            background: transparent;
            border: 1px solid transparent;
            color: $color-red-0;
            &:hover{
             background: $color-red-0;
             border: 1px solid $color-red-0;
             color: $color-white-0;
         }
        }
    }
}

@mixin respond-to($breakpoint) {
    @if map-has-key($map: $breakpoints, $key: $breakpoint){
        $value: map-get($map: $breakpoints, $key: $breakpoint);
        @media screen and (max-width: $value) {
            @content;
        }
    }@else{
        @warn "$breakpoint k ton tai trong breakpoints";

    }
}

@mixin respond-toMin($breakpoint) {
    @if map-has-key($map: $breakpoints, $key: $breakpoint){
        $value: map-get($map: $breakpoints, $key: $breakpoint);
        @media screen and (min-width: $value) {
            @content;
        }
    }@else{
        @warn "$breakpoint k ton tai trong breakpoints";

    }
}

@mixin card-carousel {
    .card-body{
        padding: 1rem;
        .card-title{
            @include styleText($fs-0,$fw-bold,$color-black-0);
        }
        .card-text{
            @include styleText($fs-1,$fw-normal,$color-gray-4);
        }
        .rating{
            .rating__star{
                @include styleText($fs-1,$fw-normal,$color-yellow);
            }
            span:nth-child(2){
                @include styleText($fs-1,$fw-bold,$color-black-0);
            }
            span:last-child{
                @include styleText($fs-1,$fw-normal,$color-gray-4);

            }
        }
        .price{
            text-align: right;

            @include styleText($fs-0 + 3,$fw-bold,$color-black-0);

        }
    }
}